name: Build and Deploy Project to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: |
          ./gradlew clean
          ./gradlew build
        env:
          JWT_SECRET_KEY_TEST: ${{ secrets.JWT_SECRET_KEY_TEST }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}

      - name: Build Docker image
        if: github.event_name == 'push'
        run: docker build -t ${{ secrets.AWS_ECR_IMAGE_URI }}:1.0.1 -t ${{ secrets.AWS_ECR_IMAGE_URI }}:latest .

      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        if: github.event_name == 'push'
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_IMAGE_URI }}

      - name: Push Docker image to Amazon ECR
        if: github.event_name == 'push'
        run: docker push ${{ secrets.AWS_ECR_IMAGE_URI }}:latest

      - name: Get Action runner IP address
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Temporarily add Action runner IP address to EC2 security group inbound rules
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: SSH and Deploy to EC2
        if: github.event_name == 'push'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.AWS_ECR_IMAGE_URI }}:latest
            docker stop ${{ secrets.CONTAINER_NAME }} || true
            docker run -d -p 80:8080 \
              -e SPRING_PROFILE=prod \
              -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
              -e DB_HOST_AWS=${{ secrets.DB_HOST_AWS }} \
              -e DB_PORT_AWS=5432 \
              -e DB_NAME_AWS=postgres \
              -e DB_USER_AWS=postgres \
              -e DB_PASS_AWS="${{ secrets.DB_PASS_AWS }}" \
              -e CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }} \
              ${{ secrets.AWS_ECR_IMAGE_URI }}:latest

      - name: Remove Action runner IP address from EC2 security group inbound rules
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_EC2_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32